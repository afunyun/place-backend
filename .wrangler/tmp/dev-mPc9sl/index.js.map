{
  "version": 3,
  "sources": ["../bundle-gVRexq/checked-fetch.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-gVRexq/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-gVRexq/middleware-loader.entry.ts"],
  "sourceRoot": "/home/afunyun/devwork/place-worker-releaseDeploy/1_0/.wrangler/tmp/dev-mPc9sl",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/index.js\n\n// Helper function to return a JSON response\nconst jsonResponse = (data, status = 200, headers = {}) => {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: { 'Content-Type': 'application/json', ...headers },\n  });\n};\n\n// The Durable Object class for the grid state\nexport class GridDurableObject {\n  constructor(state, env) {\n    this.state = state;\n    this.env = env;\n    this.sessions = [];\n    this.gridCache = null; // In-memory cache for the grid\n    this.paletteCache = null; // In-memory cache for the palette\n    this.state.blockConcurrencyWhile(async () => {\n        await this.initialize();\n    });\n  }\n\n  async initialize() {\n    // Initialize palette if not already done\n    if (!this.paletteCache) {\n        const palette = await this.env.PALETTE_KV.get('default_palette', 'json');\n        if (palette) {\n            this.paletteCache = palette;\n        } else {\n            // Default palette if nothing in KV\n            const defaultPalette = ['#FFFFFF', '#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'];\n            await this.env.PALETTE_KV.put('default_palette', JSON.stringify(defaultPalette));\n            this.paletteCache = defaultPalette;\n        }\n    }\n\n    // Initialize grid if not already done\n    const storedGrid = await this.state.storage.get('grid');\n    if (!storedGrid) {\n        const width = 500;\n        const height = 500;\n        // Initialize with the first color of the palette (white)\n        const grid = new Uint8Array(width * height).fill(0);\n        await this.state.storage.put('grid', grid);\n        this.gridCache = grid;\n    } else {\n        this.gridCache = storedGrid;\n    }\n  }\n\n  // RLE encoding for the grid\n  encodeRLE(data) {\n    if (!data || data.length === 0) {\n      return new Uint8Array(0);\n    }\n    const encoded = [];\n    let count = 1;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i] === data[i + 1] && count < 255) {\n        count++;\n      } else {\n        encoded.push(count);\n        encoded.push(data[i]);\n        count = 1;\n      }\n    }\n    return new Uint8Array(encoded);\n  }\n\n  async getGridRLE() {\n    if (!this.gridCache) {\n        await this.initialize();\n    }\n    return this.encodeRLE(this.gridCache);\n  }\n\n  async updatePixel(x, y, color) {\n    if (!this.gridCache || !this.paletteCache) {\n        await this.initialize();\n    }\n\n    const colorIndex = this.paletteCache.indexOf(color);\n    if (colorIndex === -1) {\n      // Color not in palette, maybe add it or return error\n      return; // Or handle error\n    }\n\n    const width = 500;\n    const index = y * width + x;\n    if (this.gridCache[index] !== colorIndex) {\n      this.gridCache[index] = colorIndex;\n      await this.state.storage.put('grid', this.gridCache);\n      this.broadcast({ type: 'pixelUpdate', x, y, color });\n    }\n  }\n\n  handleWebSocket(ws) {\n    ws.accept();\n    this.sessions.push(ws);\n\n    ws.addEventListener('close', (event) => {\n      this.sessions = this.sessions.filter((session) => session !== ws);\n    });\n    ws.addEventListener('error', (event) => {\n      this.sessions = this.sessions.filter((session) => session !== ws);\n    });\n  }\n\n  broadcast(message) {\n    const serializedMessage = JSON.stringify(message);\n    this.sessions.forEach((session) => {\n      if (session.readyState === WebSocket.OPEN) {\n        session.send(serializedMessage);\n      }\n    });\n  }\n\n  async fetch(request) {\n    const url = new URL(request.url);\n    switch (url.pathname) {\n      case '/grid': {\n        const rleGrid = await this.getGridRLE();\n        return new Response(rleGrid, { headers: { 'Content-Type': 'application/octet-stream' } });\n      }\n      case '/pixel': {\n        if (request.method === 'POST') {\n          const { x, y, color } = await request.json();\n          await this.updatePixel(x, y, color);\n          return new Response('OK', { status: 200 });\n        }\n        return new Response('Method not allowed', { status: 405 });\n      }\n      case '/ws': {\n        const [client, server] = Object.values(new WebSocketPair());\n        this.handleWebSocket(server);\n        return new Response(null, { status: 101, webSocket: client });\n      }\n      default:\n        return new Response('Not found', { status: 404 });\n    }\n  }\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n\n    if (path === '/grid' || path === '/pixel' || path === '/ws') {\n        const id = env.GRID_STATE.idFromName('main-grid');\n        const stub = env.GRID_STATE.get(id);\n        return stub.fetch(request);\n    }\n\n    if (path === '/palette') {\n        let palette = await env.PALETTE_KV.get('default_palette', 'json');\n        if (!palette) {\n            const defaultPalette = ['#FFFFFF', '#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'];\n            await env.PALETTE_KV.put('default_palette', JSON.stringify(defaultPalette));\n            palette = defaultPalette;\n        }\n        return jsonResponse({ palette });\n    }\n\n    if (path === '/auth/discord' && request.method === 'POST') {\n        try {\n            const { code, redirect_uri } = await request.json();\n            const DISCORD_CLIENT_SECRET = env.DISCORD_CLIENT_SECRET;\n            const DISCORD_CLIENT_ID = env.DISCORD_CLIENT_ID;\n\n            const tokenResponse = await fetch('https://discord.com/api/oauth2/token', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                body: new URLSearchParams({\n                    client_id: DISCORD_CLIENT_ID,\n                    client_secret: DISCORD_CLIENT_SECRET,\n                    grant_type: 'authorization_code',\n                    code: code,\n                    redirect_uri: redirect_uri,\n                }),\n            });\n\n            if (!tokenResponse.ok) {\n                const error = await tokenResponse.json();\n                return jsonResponse({ message: 'Discord token exchange failed', error }, { status: 400 });\n            }\n\n            const tokenData = await tokenResponse.json();\n\n            const userResponse = await fetch('https://discord.com/api/users/@me', {\n                headers: {\n                    Authorization: `Bearer ${tokenData.access_token}`,\n                },\n            });\n\n            if (!userResponse.ok) {\n                return jsonResponse({ message: 'Failed to fetch Discord user' }, { status: 400 });\n            }\n\n            const userData = await userResponse.json();\n\n            return jsonResponse({\n                access_token: tokenData.access_token,\n                user: userData,\n            });\n        } catch (error) {\n            return jsonResponse({ message: 'Authentication error', error: error.message }, { status: 500 });\n        }\n    }\n\n    // For everything else, serve from the assets\n    return env.ASSETS.fetch(request);\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/.wrangler/tmp/bundle-gVRexq/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/.wrangler/tmp/bundle-gVRexq/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/afunyun/devwork/place-worker-releaseDeploy/1_0/.wrangler/tmp/bundle-gVRexq/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
